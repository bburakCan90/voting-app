version: '3.8'

services:
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: votes
    ports:
      - "5432:5432"

  backend:
    build: ./backend
    ports:
      - "5000:80"
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=votes
    command: [ "node", "backend.js" ]

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    command: [ "node", "frontend.js" ]

  result:
    build: ./result
    ports:
      - "5001:80"
    depends_on:
      - backend
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=votes
    command: [ "node", "result.js" ]

  worker:
    build: ./worker
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=votes
    command: [ "node", "worker.js" ]

volumes:
  redis-data:
